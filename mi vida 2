
// Online C++ Compiler - Build, Compile and Run your C++ programs online in your favorite browser

#include<iostream>
#include <math.h> 

using namespace std;

class Point {

//Atributos
    string c;
    int x;
    int y;

public:
    
    //Constructores
    Point(string cc, int xc, int yc) {
        c = cc;
        x = xc;
        y = yc;

    }

    Point() {
        c = "";
        x = 0;
        y = 0.0;
    }

    //M�todos
    
  
    //Getters
    string getC() {
        return c;
    }

    int getX() {
        return x;
    }

    int getY() {
        return y;
    }


    //Setters
    void setX(int xc) {
        x = xc;
    }

    void setY(int yc) {
        y = yc;
    }
    
    void setC(string cc) {
        c = cc;
    }
    
    Point& operator=(const Point& f) { 
		setX(f.x);
		setY(f.y);
		setC(f.c);
		return *this; 
	}

};

class Nodo{
  
  Point* dato;
  Nodo* pointer;
  
public:
  
  Nodo(){
      dato = NULL;
      pointer = NULL;
  }
  
  ~Nodo(){
      delete dato;
  }
  
  Nodo(Point* d){
      dato = d;
      pointer = NULL;
  }
    
  Point* getDato(){
      return dato;
  }
  
  void setDato(Point* d){
      dato = d;
  }
  
  Nodo* getNext(){
      return pointer;
  }
  
  void setNext(Nodo* p){
      pointer = p;
  }
    
};

class Lista{
    
    Nodo* ptr;
    int size;

public:  

    Lista(){
        ptr = NULL;
        size = 0;
    }
    
    ~Lista(){
        Nodo* t = ptr;
        Nodo* n;
        while(t->getNext() != NULL){
            n = t;
            t = t->getNext();
            delete n;
        }
    }
    
    void push_back(Point* d){
        
        if(size == 0){
            ptr = new Nodo(d);
            size++;
        }else{
            Nodo* t = ptr;
            while(t->getNext() != NULL){
                t = t->getNext();    
            }
            t->setNext(new Nodo(d));
        }
        
    }
    
    int getSize(int sizez){
        size = sizez;
        return size;
    }
    
    void print(){
        if(size == 0){
            cout<<"La lista está vacía"<<endl;
        }else{
            Nodo* t = ptr;
            do{
                cout<<"("<<(*t).getDato()->getC()<<", "<<(*t).getDato()->getX()<<", "<<t->getDato()->getY()<<"), ";
                t = t->getNext();
                
            }while(t != NULL);
            cout<<endl;
        }
    }
         Nodo* getNodo(int pos) {
        if(size == 0) {
            throw invalid_argument("La lista no tienen nodos");
        } else if (pos >= size || pos < 0) {
            throw invalid_argument("El nodo no esta en la lista");
        } else {
            Nodo* t = ptr;
            for(int i = 0; i < pos; i++) {
                t = t->getNext();
            }
            return t;
        }
    }
};


int main()
{
    int nci = 9;
    int ncar = 5;
    string Ciclistas[nci] = {"julian", "Walter emilio", "Mr White", "steve", "alex", "Baby yoda","tu mamá", "tu papá","el perro"};
    
    Lista Marcadores = Lista();
    
    for(int i = 0; i<nci; i++){
        for(int j = 0; j<ncar; j++){
            Marcadores.push_back(new Point(Ciclistas[i], j, rand()%100));
           
        }
   
    }
    
    Marcadores.print();
    Marcadores.getSize(nci*ncar);
   /* Nodo* nodo =Marcadores.getNodo(0);
    cout <<nodo -> getDato() -> getC();
    cout <<nodo -> getDato() -> getX();
    cout <<nodo -> getDato() -> getY();*/
    Lista carrera_suma =  Lista();
    int Vsuma[nci];
    for(int i = 0; i<nci; i++){
        int suma = 0;
        for(int j = 0; j<nci*ncar; j++){
            if (Marcadores.getNodo(j)-> getDato() -> getC() == Ciclistas[i]){
                int valor = Marcadores.getNodo(j)-> getDato() -> getY();
                suma = suma + valor;
                Vsuma[i] = suma;
                
                /*cout << Marcadores.getNodo(j)-> getDato() -> getY() << "\n";*/
               
            }
            
        }
        cout << Vsuma [i] << "\n";
        carrera_suma.push_back(new Point(Ciclistas[i], ncar, suma));
    }
    
     carrera_suma.print();
     
     
     int aux = 0;
     for(int i = 0; i<nci; i++){
        for(int j = 0; j<nci; j++){
        
        if(Vsuma[i]<Vsuma[j]){
            if(j<i){
                aux = Vsuma[i];
                Vsuma[i] = Vsuma[j];
                Vsuma[j] = aux;
            }
        }
        }
     }
    
    cout << "\n";
    for ( int i =0; i < nci; i++){
        cout << Vsuma[i] << " ";
    }
    
    return 0;
}
